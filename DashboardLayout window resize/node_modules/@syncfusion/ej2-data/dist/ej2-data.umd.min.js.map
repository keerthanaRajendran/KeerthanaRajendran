{"version":3,"file":"ej2-data.umd.min.js","sources":["../src/query.js","../src/util.js","../src/adaptors.js","../src/manager.js"],"sourcesContent":["import { DataUtil } from './util';\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\nvar Query = /** @class */ (function () {\n    /**\n     * Constructor for Query class.\n     * @param  {string|string[]} from?\n     * @hidden\n     */\n    function Query(from) {\n        /** @hidden */\n        this.subQuery = null;\n        /** @hidden */\n        this.isChild = false;\n        /** @hidden */\n        this.distincts = [];\n        this.queries = [];\n        this.key = '';\n        this.fKey = '';\n        if (typeof from === 'string') {\n            this.fromTable = from;\n        }\n        else if (from && from instanceof Array) {\n            this.lookups = from;\n        }\n        this.expands = [];\n        this.sortedColumns = [];\n        this.groupedColumns = [];\n        this.subQuery = null;\n        this.isChild = false;\n        this.params = [];\n        this.lazyLoad = [];\n        return this;\n    }\n    /**\n     * Sets the primary key.\n     * @param  {string} field - Defines the column field.\n     */\n    Query.prototype.setKey = function (field) {\n        this.key = field;\n        return this;\n    };\n    /**\n     * Sets default DataManager to execute query.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.using = function (dataManager) {\n        this.dataManager = dataManager;\n        return this;\n    };\n    /**\n     * Executes query with the given DataManager.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     * @param  {Function} done - Defines the success callback.\n     * @param  {Function} fail - Defines the failure callback.\n     * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n     *\n     * <pre>\n     * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n     * let query: Query = new Query();\n     * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n     * let promise: Promise< Object > = query.execute(dataManager);\n     * promise.then((e: { result: Object }) => { });\n     * </pre>\n     */\n    Query.prototype.execute = function (dataManager, done, fail, always) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeQuery(this, done, fail, always);\n        }\n        return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Executes query with the local datasource.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.executeLocal = function (dataManager) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeLocal(this);\n        }\n        return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Creates deep copy of the Query object.\n     */\n    Query.prototype.clone = function () {\n        var cloned = new Query();\n        cloned.queries = this.queries.slice(0);\n        cloned.key = this.key;\n        cloned.isChild = this.isChild;\n        cloned.dataManager = this.dataManager;\n        cloned.fromTable = this.fromTable;\n        cloned.params = this.params.slice(0);\n        cloned.expands = this.expands.slice(0);\n        cloned.sortedColumns = this.sortedColumns.slice(0);\n        cloned.groupedColumns = this.groupedColumns.slice(0);\n        cloned.subQuerySelector = this.subQuerySelector;\n        cloned.subQuery = this.subQuery;\n        cloned.fKey = this.fKey;\n        cloned.isCountRequired = this.isCountRequired;\n        cloned.distincts = this.distincts.slice(0);\n        cloned.lazyLoad = this.lazyLoad.slice(0);\n        return cloned;\n    };\n    /**\n     * Specifies the name of table to retrieve data in query execution.\n     * @param  {string} tableName - Defines the table name.\n     */\n    Query.prototype.from = function (tableName) {\n        this.fromTable = tableName;\n        return this;\n    };\n    /**\n     * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n     * @param  {string} key - Defines the key of additional parameter.\n     * @param  {Function|string} value - Defines the value for the key.\n     */\n    Query.prototype.addParams = function (key, value) {\n        if (typeof value === 'function') {\n            this.params.push({ key: key, fn: value });\n        }\n        else {\n            this.params.push({ key: key, value: value });\n        }\n        return this;\n    };\n    /**\n     * @hidden\n     */\n    Query.prototype.distinct = function (fields) {\n        if (typeof fields === 'string') {\n            this.distincts = [].slice.call([fields], 0);\n        }\n        else {\n            this.distincts = fields.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Expands the related table.\n     * @param  {string|Object[]} tables\n     */\n    Query.prototype.expand = function (tables) {\n        if (typeof tables === 'string') {\n            this.expands = [].slice.call([tables], 0);\n        }\n        else {\n            this.expands = tables.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Filter data with given filter criteria.\n     * @param  {string|Predicate} fieldName - Defines the column field or Predicate.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string|number|boolean} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent) {\n        operator = operator ? (operator).toLowerCase() : null;\n        var predicate = null;\n        if (typeof fieldName === 'string') {\n            predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent);\n        }\n        else if (fieldName instanceof Predicate) {\n            predicate = fieldName;\n        }\n        this.queries.push({\n            fn: 'onWhere',\n            e: predicate\n        });\n        return this;\n    };\n    /**\n     * Search data with given search criteria.\n     * @param  {string|number|boolean} searchKey - Defines the search key.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     * @param  {string} operator - Defines the operator how to search data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [fieldNames];\n        }\n        if (!operator || operator === 'none') {\n            operator = 'contains';\n        }\n        var comparer = DataUtil.fnOperators[operator];\n        this.queries.push({\n            fn: 'onSearch',\n            e: {\n                fieldNames: fieldNames,\n                operator: operator,\n                searchKey: searchKey,\n                ignoreCase: ignoreCase,\n                ignoreAccent: ignoreAccent,\n                comparer: comparer\n            }\n        });\n        return this;\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     */\n    Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n        var order = 'ascending';\n        var sorts;\n        var temp;\n        if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n            fieldName = fieldName.replace(/ desc$/i, '');\n            comparer = 'descending';\n        }\n        if (!comparer || typeof comparer === 'string') {\n            order = comparer ? comparer.toLowerCase() : 'ascending';\n            comparer = DataUtil.fnSort(comparer);\n        }\n        if (isFromGroup) {\n            sorts = Query.filterQueries(this.queries, 'onSortBy');\n            for (var i = 0; i < sorts.length; i++) {\n                temp = sorts[i].e.fieldName;\n                if (typeof temp === 'string') {\n                    if (temp === fieldName) {\n                        return this;\n                    }\n                }\n                else if (temp instanceof Array) {\n                    for (var j = 0; j < temp.length; j++) {\n                        if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n                            return this;\n                        }\n                    }\n                }\n            }\n        }\n        this.queries.push({\n            fn: 'onSortBy',\n            e: {\n                fieldName: fieldName,\n                comparer: comparer,\n                direction: order\n            }\n        });\n        return this;\n    };\n    /**\n     * Sorts data in descending order.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.sortByDesc = function (fieldName) {\n        return this.sortBy(fieldName, 'descending');\n    };\n    /**\n     * Groups data with the given field name.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.group = function (fieldName, fn, format) {\n        this.sortBy(fieldName, null, true);\n        this.queries.push({\n            fn: 'onGroup',\n            e: {\n                fieldName: fieldName,\n                comparer: fn ? fn : null,\n                format: format ? format : null\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given page index and size.\n     * @param  {number} pageIndex - Defines the current page index.\n     * @param  {number} pageSize - Defines the no of records per page.\n     */\n    Query.prototype.page = function (pageIndex, pageSize) {\n        this.queries.push({\n            fn: 'onPage',\n            e: {\n                pageIndex: pageIndex,\n                pageSize: pageSize\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given start and end index.\n     * @param  {number} start - Defines the start index of the datasource.\n     * @param  {number} end - Defines the end index of the datasource.\n     */\n    Query.prototype.range = function (start, end) {\n        this.queries.push({\n            fn: 'onRange',\n            e: {\n                start: start,\n                end: end\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data from the top of the data source based on given number of records count.\n     * @param  {number} nos - Defines the no of records to retrieve from datasource.\n     */\n    Query.prototype.take = function (nos) {\n        this.queries.push({\n            fn: 'onTake',\n            e: {\n                nos: nos\n            }\n        });\n        return this;\n    };\n    /**\n     * Skips data with given number of records count from the top of the data source.\n     * @param  {number} nos - Defines the no of records skip in the datasource.\n     */\n    Query.prototype.skip = function (nos) {\n        this.queries.push({\n            fn: 'onSkip',\n            e: { nos: nos }\n        });\n        return this;\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     */\n    Query.prototype.select = function (fieldNames) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [].slice.call([fieldNames], 0);\n        }\n        this.queries.push({\n            fn: 'onSelect',\n            e: { fieldNames: fieldNames }\n        });\n        return this;\n    };\n    /**\n     * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n     * @param  {Query} query - Defines the query to relate two tables.\n     * @param  {Function} selectorFn - Defines the custom function to select records.\n     */\n    Query.prototype.hierarchy = function (query, selectorFn) {\n        this.subQuerySelector = selectorFn;\n        this.subQuery = query;\n        return this;\n    };\n    /**\n     * Sets the foreign key which is used to get data from the related table.\n     * @param  {string} key - Defines the foreign key.\n     */\n    Query.prototype.foreignKey = function (key) {\n        this.fKey = key;\n        return this;\n    };\n    /**\n     * It is used to get total number of records in the DataManager execution result.\n     */\n    Query.prototype.requiresCount = function () {\n        this.isCountRequired = true;\n        return this;\n    };\n    //type - sum, avg, min, max\n    /**\n     * Aggregate the data with given type and field name.\n     * @param  {string} type - Defines the aggregate type.\n     * @param  {string} field - Defines the column field to aggregate.\n     */\n    Query.prototype.aggregate = function (type, field) {\n        this.queries.push({\n            fn: 'onAggregates',\n            e: { field: field, type: type }\n        });\n        return this;\n    };\n    /**\n     * Pass array of filterColumn query for performing filter operation.\n     * @param  {QueryOptions[]} queries\n     * @param  {string} name\n     * @hidden\n     */\n    Query.filterQueries = function (queries, name) {\n        return queries.filter(function (q) {\n            return q.fn === name;\n        });\n    };\n    /**\n     * To get the list of queries which is already filtered in current data source.\n     * @param  {Object[]} queries\n     * @param  {string[]} singles\n     * @hidden\n     */\n    Query.filterQueryLists = function (queries, singles) {\n        var filtered = queries.filter(function (q) {\n            return singles.indexOf(q.fn) !== -1;\n        });\n        var res = {};\n        for (var i = 0; i < filtered.length; i++) {\n            if (!res[filtered[i].fn]) {\n                res[filtered[i].fn] = filtered[i].e;\n            }\n        }\n        return res;\n    };\n    return Query;\n}());\nexport { Query };\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\nvar Predicate = /** @class */ (function () {\n    /**\n     * Constructor for Predicate class.\n     * @param  {string|Predicate} field\n     * @param  {string} operator\n     * @param  {string|number|boolean|Predicate|Predicate[]} value\n     * @param  {boolean=false} ignoreCase\n     * @hidden\n     */\n    function Predicate(field, operator, value, ignoreCase, ignoreAccent) {\n        if (ignoreCase === void 0) { ignoreCase = false; }\n        /** @hidden */\n        this.ignoreAccent = false;\n        /** @hidden */\n        this.isComplex = false;\n        if (typeof field === 'string') {\n            this.field = field;\n            this.operator = operator.toLowerCase();\n            this.value = value;\n            this.ignoreCase = ignoreCase;\n            this.ignoreAccent = ignoreAccent;\n            this.isComplex = false;\n            this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n        }\n        else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n            this.isComplex = true;\n            this.condition = operator.toLowerCase();\n            this.predicates = [field];\n            if (value instanceof Array) {\n                [].push.apply(this.predicates, value);\n            }\n            else {\n                this.predicates.push(value);\n            }\n        }\n        return this;\n    }\n    /**\n     * Adds n-number of new predicates on existing predicate with “and” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.and = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “or” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.or = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n    };\n    /**\n     * Adds new predicate on existing predicate with “or” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Converts plain JavaScript object to Predicate object.\n     * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n     */\n    Predicate.fromJson = function (json) {\n        if (json instanceof Array) {\n            var res = [];\n            for (var i = 0, len = json.length; i < len; i++) {\n                res.push(this.fromJSONData(json[i]));\n            }\n            return res;\n        }\n        var pred = json;\n        return this.fromJSONData(pred);\n    };\n    /**\n     * Validate the record based on the predicates.\n     * @param  {Object} record - Defines the datasource record.\n     */\n    Predicate.prototype.validate = function (record) {\n        var predicate = this.predicates ? this.predicates : [];\n        var isAnd;\n        var ret;\n        if (!this.isComplex && this.comparer) {\n            return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n        }\n        isAnd = this.condition === 'and';\n        for (var i = 0; i < predicate.length; i++) {\n            ret = predicate[i].validate(record);\n            if (isAnd) {\n                if (!ret) {\n                    return false;\n                }\n            }\n            else {\n                if (ret) {\n                    return true;\n                }\n            }\n        }\n        return isAnd;\n    };\n    /**\n     * Converts predicates to plain JavaScript.\n     * This method is uses Json stringify when serializing Predicate object.\n     */\n    Predicate.prototype.toJson = function () {\n        var predicates;\n        var p;\n        if (this.isComplex) {\n            predicates = [];\n            p = this.predicates;\n            for (var i = 0; i < p.length; i++) {\n                predicates.push(p[i].toJson());\n            }\n        }\n        return {\n            isComplex: this.isComplex,\n            field: this.field,\n            operator: this.operator,\n            value: this.value,\n            ignoreCase: this.ignoreCase,\n            ignoreAccent: this.ignoreAccent,\n            condition: this.condition,\n            predicates: predicates\n        };\n    };\n    Predicate.combinePredicates = function (predicates, operator) {\n        if (predicates.length === 1) {\n            if (!(predicates[0] instanceof Array)) {\n                return predicates[0];\n            }\n            predicates = predicates[0];\n        }\n        return new Predicate(predicates[0], operator, predicates.slice(1));\n    };\n    Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n        if (field instanceof Predicate) {\n            return Predicate[condition](pred, field);\n        }\n        if (typeof field === 'string') {\n            return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n        }\n        return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n    };\n    Predicate.fromJSONData = function (json) {\n        var preds = json.predicates || [];\n        var len = preds.length;\n        var predicates = [];\n        var result;\n        for (var i = 0; i < len; i++) {\n            predicates.push(this.fromJSONData(preds[i]));\n        }\n        if (!json.isComplex) {\n            result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n        }\n        else {\n            result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n        }\n        return result;\n    };\n    return Predicate;\n}());\nexport { Predicate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from './manager';\nimport { Query } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Data manager common utility methods.\n * @hidden\n */\nvar DataUtil = /** @class */ (function () {\n    function DataUtil() {\n    }\n    /**\n     * Returns the value by invoking the provided parameter function.\n     * If the paramater is not of type function then it will be returned as it is.\n     * @param  {Function|string|string[]|number} value\n     * @param  {Object} inst?\n     * @hidden\n     */\n    DataUtil.getValue = function (value, inst) {\n        if (typeof value === 'function') {\n            return value.call(inst || {});\n        }\n        return value;\n    };\n    /**\n     * Returns true if the input string ends with given string.\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.endsWith = function (input, substr) {\n        return input.slice && input.slice(-substr.length) === substr;\n    };\n    /**\n     * Returns true if the input string starts with given string.\n     * @param  {string} str\n     * @param  {string} startstr\n     */\n    DataUtil.startsWith = function (input, start) {\n        return input.slice(0, start.length) === start;\n    };\n    /**\n     * To return the sorting function based on the string.\n     * @param  {string} order\n     * @hidden\n     */\n    DataUtil.fnSort = function (order) {\n        order = order ? DataUtil.toLowerCase(order) : 'ascending';\n        if (order === 'ascending') {\n            return this.fnAscending;\n        }\n        return this.fnDescending;\n    };\n    /**\n     * Comparer function which is used to sort the data in ascending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnAscending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return -1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y);\n        }\n        if (x === null || x === undefined) {\n            return 1;\n        }\n        return x - y;\n    };\n    /**\n     * Comparer function which is used to sort the data in descending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnDescending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return 1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y) * -1;\n        }\n        if (x === null || x === undefined) {\n            return -1;\n        }\n        return y - x;\n    };\n    DataUtil.extractFields = function (obj, fields) {\n        var newObj = {};\n        for (var i = 0; i < fields.length; i++) {\n            newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n        }\n        return newObj;\n    };\n    /**\n     * Select objects by given fields from jsonArray.\n     * @param  {Object[]} jsonArray\n     * @param  {string[]} fields\n     */\n    DataUtil.select = function (jsonArray, fields) {\n        var newData = [];\n        for (var i = 0; i < jsonArray.length; i++) {\n            newData.push(this.extractFields(jsonArray[i], fields));\n        }\n        return newData;\n    };\n    /**\n     * Group the input data based on the field name.\n     * It also performs aggregation of the grouped records based on the aggregates paramater.\n     * @param  {Object[]} jsonArray\n     * @param  {string} field?\n     * @param  {Object[]} agg?\n     * @param  {number} level?\n     * @param  {Object[]} groupDs?\n     */\n    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format, isLazyLoad) {\n        level = level || 1;\n        var jsonData = jsonArray;\n        var guid = 'GroupGuid';\n        if (jsonData.GroupGuid === consts[guid]) {\n            var _loop_1 = function (j) {\n                if (!isNullOrUndefined(groupDs)) {\n                    var indx = -1;\n                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n                    indx = groupDs.indexOf(temp[0]);\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format, isLazyLoad);\n                    jsonData[j].count = groupDs[indx].count;\n                }\n                else {\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format, isLazyLoad);\n                    jsonData[j].count = jsonData[j].items.length;\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < jsonData.length; j++) {\n                _loop_1(j);\n            }\n            jsonData.childLevels += 1;\n            return jsonData;\n        }\n        var grouped = {};\n        var groupedArray = [];\n        groupedArray.GroupGuid = consts[guid];\n        groupedArray.level = level;\n        groupedArray.childLevels = 0;\n        groupedArray.records = jsonData;\n        var _loop_2 = function (i) {\n            var val = this_2.getVal(jsonData, i, field);\n            if (!isNullOrUndefined(format)) {\n                val = format(val, field);\n            }\n            if (!grouped[val]) {\n                grouped[val] = {\n                    key: val,\n                    count: 0,\n                    items: [],\n                    aggregates: {},\n                    field: field\n                };\n                groupedArray.push(grouped[val]);\n                if (!isNullOrUndefined(groupDs)) {\n                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n                    grouped[val].count = tempObj[0].count;\n                }\n            }\n            grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n            if (!isLazyLoad || (isLazyLoad && aggregates.length)) {\n                grouped[val].items.push(jsonData[i]);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < jsonData.length; i++) {\n            _loop_2(i);\n        }\n        if (aggregates && aggregates.length) {\n            var _loop_3 = function (i) {\n                var res = {};\n                var fn = void 0;\n                var aggs = aggregates;\n                for (var j = 0; j < aggregates.length; j++) {\n                    fn = DataUtil.aggregates[aggregates[j].type];\n                    if (!isNullOrUndefined(groupDs)) {\n                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n                        }\n                    }\n                    else {\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n                        }\n                    }\n                }\n                groupedArray[i].aggregates = res;\n            };\n            for (var i = 0; i < groupedArray.length; i++) {\n                _loop_3(i);\n            }\n        }\n        if (isLazyLoad && groupedArray.length && aggregates.length) {\n            for (var i = 0; i < groupedArray.length; i++) {\n                groupedArray[i].items = [];\n            }\n        }\n        return jsonData.length && groupedArray || jsonData;\n    };\n    /**\n     * It is used to categorize the multiple items based on a specific field in jsonArray.\n     * The hierarchical queries are commonly required when you use foreign key binding.\n     * @param  {string} fKey\n     * @param  {string} from\n     * @param  {Object[]} source\n     * @param  {Group} lookup?\n     * @param  {string} pKey?\n     * @hidden\n     */\n    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n        var i;\n        var grp = {};\n        var temp;\n        if (lookup.result) {\n            lookup = lookup.result;\n        }\n        if (lookup.GroupGuid) {\n            this.throwError('DataManager: Do not have support Grouping in hierarchy');\n        }\n        for (i = 0; i < lookup.length; i++) {\n            var fKeyData = this.getObject(fKey, lookup[i]);\n            temp = grp[fKeyData] || (grp[fKeyData] = []);\n            temp.push(lookup[i]);\n        }\n        for (i = 0; i < source.length; i++) {\n            var fKeyData = this.getObject(pKey || fKey, source[i]);\n            source[i][from] = grp[fKeyData];\n        }\n    };\n    /**\n     * The method used to get the field names which started with specified characters.\n     * @param  {Object} obj\n     * @param  {string[]} fields?\n     * @param  {string} prefix?\n     * @hidden\n     */\n    DataUtil.getFieldList = function (obj, fields, prefix) {\n        if (prefix === undefined) {\n            prefix = '';\n        }\n        if (fields === undefined || fields === null) {\n            return this.getFieldList(obj, [], prefix);\n        }\n        var copyObj = obj;\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var prop = keys_1[_i];\n            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n            }\n            else {\n                fields.push(prefix + prop);\n            }\n        }\n        return fields;\n    };\n    /**\n     * Gets the value of the property in the given object.\n     * The complex object can be accessed by providing the field names concatenated with dot(.).\n     * @param  {string} nameSpace - The name of the property to be accessed.\n     * @param  {Object} from - Defines the source object.\n     */\n    DataUtil.getObject = function (nameSpace, from) {\n        if (!nameSpace) {\n            return from;\n        }\n        if (!from) {\n            return undefined;\n        }\n        if (nameSpace.indexOf('.') === -1) {\n            return from[nameSpace];\n        }\n        var value = from;\n        var splits = nameSpace.split('.');\n        for (var i = 0; i < splits.length; i++) {\n            if (value == null) {\n                break;\n            }\n            value = value[splits[i]];\n        }\n        return value;\n    };\n    /**\n     * To set value for the nameSpace in desired object.\n     * @param {string} nameSpace - String value to the get the inner object.\n     * @param {Object} value - Value that you need to set.\n     * @param {Object} obj - Object to get the inner object value.\n     * @return { [key: string]: Object; } | Object\n     * @hidden\n     */\n    DataUtil.setValue = function (nameSpace, value, obj) {\n        var keys = nameSpace.toString().split('.');\n        var start = obj || {};\n        var fromObj = start;\n        var i;\n        var length = keys.length;\n        var key;\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            if (i + 1 === length) {\n                fromObj[key] = value === undefined ? undefined : value;\n            }\n            else if (isNullOrUndefined(fromObj[key])) {\n                fromObj[key] = {};\n            }\n            fromObj = fromObj[key];\n        }\n        return start;\n    };\n    /**\n     * Sort the given data based on the field and comparer.\n     * @param  {Object[]} ds - Defines the input data.\n     * @param  {string} field - Defines the field to be sorted.\n     * @param  {Function} comparer - Defines the comparer function used to sort the records.\n     */\n    DataUtil.sort = function (ds, field, comparer) {\n        if (ds.length <= 1) {\n            return ds;\n        }\n        var middle = parseInt((ds.length / 2).toString(), 10);\n        var left = ds.slice(0, middle);\n        var right = ds.slice(middle);\n        left = this.sort(left, field, comparer);\n        right = this.sort(right, field, comparer);\n        return this.merge(left, right, field, comparer);\n    };\n    DataUtil.ignoreDiacritics = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        var result = value.split('');\n        var newValue = result.map(function (temp) { return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp; });\n        return newValue.join('');\n    };\n    DataUtil.merge = function (left, right, fieldName, comparer) {\n        var result = [];\n        var current;\n        while (left.length > 0 || right.length > 0) {\n            if (left.length > 0 && right.length > 0) {\n                if (comparer) {\n                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n                }\n                else {\n                    current = left[0][fieldName] < left[0][fieldName] ? left : right;\n                }\n            }\n            else {\n                current = left.length > 0 ? left : right;\n            }\n            result.push(current.shift());\n        }\n        return result;\n    };\n    DataUtil.getVal = function (array, index, field) {\n        return field ? this.getObject(field, array[index]) : array[index];\n    };\n    DataUtil.toLowerCase = function (val) {\n        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n    };\n    /**\n     * To perform the filter operation with specified adaptor and returns the result.\n     * @param  {Object} adaptor\n     * @param  {string} fnName\n     * @param  {Object} param1?\n     * @param  {Object} param2?\n     * @hidden\n     */\n    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n        if (fnName in adaptor) {\n            var res = adaptor[fnName](param1, param2);\n            if (!isNullOrUndefined(res)) {\n                param1 = res;\n            }\n        }\n        return param1;\n    };\n    DataUtil.getAddParams = function (adp, dm, query) {\n        var req = {};\n        DataUtil.callAdaptorFunction(adp, 'addParams', {\n            dm: dm,\n            query: query,\n            params: query.params,\n            reqParams: req\n        });\n        return req;\n    };\n    /**\n     * Checks wheather the given input is a plain object or not.\n     * @param  {Object|Object[]} obj\n     */\n    DataUtil.isPlainObject = function (obj) {\n        return (!!obj) && (obj.constructor === Object);\n    };\n    /**\n     * Returns true when the browser cross origin request.\n     */\n    DataUtil.isCors = function () {\n        var xhr = null;\n        var request = 'XMLHttpRequest';\n        try {\n            xhr = new window[request]();\n        }\n        catch (e) {\n            // No exception handling\n        }\n        return !!xhr && ('withCredentials' in xhr);\n    };\n    /**\n     * Generate random GUID value which will be prefixed with the given value.\n     * @param  {string} prefix\n     */\n    DataUtil.getGuid = function (prefix) {\n        var hexs = '0123456789abcdef';\n        var rand;\n        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n            if ('crypto' in window && 'getRandomValues' in crypto) {\n                var arr = new Uint8Array(1);\n                window.crypto.getRandomValues(arr);\n                rand = arr[0] % 16 | 0;\n            }\n            else {\n                rand = Math.random() * 16 | 0;\n            }\n            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n        });\n    };\n    /**\n     * Checks wheather the given value is null or not.\n     * @param  {string|Object} val\n     * @returns boolean\n     */\n    DataUtil.isNull = function (val) {\n        return val === undefined || val === null;\n    };\n    /**\n     * To get the required items from collection of objects.\n     * @param  {Object[]} array\n     * @param  {string} field\n     * @param  {Function} comparer\n     * @returns Object\n     * @hidden\n     */\n    DataUtil.getItemFromComparer = function (array, field, comparer) {\n        var keyVal;\n        var current;\n        var key;\n        var i = 0;\n        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n        if (array.length) {\n            while (isNullOrUndefined(keyVal) && i < array.length) {\n                keyVal = DataUtil.getVal(array, i, field);\n                key = array[i++];\n            }\n        }\n        for (; i < array.length; i++) {\n            current = DataUtil.getVal(array, i, field);\n            if (isNullOrUndefined(current)) {\n                continue;\n            }\n            if (castRequired) {\n                keyVal = +keyVal;\n                current = +current;\n            }\n            if (comparer(keyVal, current) > 0) {\n                keyVal = current;\n                key = array[i];\n            }\n        }\n        return key;\n    };\n    /**\n     * To get distinct values of Array or Array of Objects.\n     * @param  {Object[]} json\n     * @param  {string} field\n     * @param  {boolean} requiresCompleteRecord\n     * @returns Object[]\n     * * distinct array of objects is return when requiresCompleteRecord set as true.\n     * @hidden\n     */\n    DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n        requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n        var result = [];\n        var val;\n        var tmp = {};\n        json.forEach(function (data, index) {\n            val = typeof (json[index]) === 'object' ? DataUtil.getVal(json, index, fieldName) : json[index];\n            if (!(val in tmp)) {\n                result.push(!requiresCompleteRecord ? val : json[index]);\n                tmp[val] = 1;\n            }\n        });\n        return result;\n    };\n    /**\n     * Specifies the value which will be used to adjust the date value to server timezone.\n     * @default null\n     */\n    DataUtil.serverTimezoneOffset = null;\n    /**\n     * Species whether are not to be parsed with serverTimezoneOffset value.\n     * @hidden\n     */\n    DataUtil.timeZoneHandling = true;\n    /**\n     * Throw error with the given string as message.\n     * @param  {string} er\n     */\n    DataUtil.throwError = function (error) {\n        try {\n            throw new Error(error);\n        }\n        catch (e) {\n            throw e.message + '\\n' + e.stack;\n        }\n    };\n    DataUtil.aggregates = {\n        /**\n         * Calculate sum of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        sum: function (ds, field) {\n            var result = 0;\n            var val;\n            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n            for (var i = 0; i < ds.length; i++) {\n                val = DataUtil.getVal(ds, i, field);\n                if (!isNaN(val) && val !== null) {\n                    if (castRequired) {\n                        val = +val;\n                    }\n                    result += val;\n                }\n            }\n            return result;\n        },\n        /**\n         * Calculate average value of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        average: function (ds, field) {\n            return DataUtil.aggregates.sum(ds, field) / ds.length;\n        },\n        /**\n         * Returns the min value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string|Function} field\n         */\n        min: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n        },\n        /**\n         * Returns the max value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         * @returns number\n         */\n        max: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n        },\n        /**\n         * Returns the total number of true value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        truecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n        },\n        /**\n         * Returns the total number of false value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        falsecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n        },\n        /**\n         * Returns the length of the given data.\n         * @param  {Object[]} ds\n         * @param  {string} field?\n         * @returns number\n         */\n        count: function (ds, field) {\n            return ds.length;\n        }\n    };\n    /**\n     * Specifies the Object with filter operators.\n     */\n    DataUtil.operatorSymbols = {\n        '<': 'lessthan',\n        '>': 'greaterthan',\n        '<=': 'lessthanorequal',\n        '>=': 'greaterthanorequal',\n        '==': 'equal',\n        '!=': 'notequal',\n        '*=': 'contains',\n        '$=': 'endswith',\n        '^=': 'startswith'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * * It will be used for date/number type filter query.\n     */\n    DataUtil.odBiOperator = {\n        '<': ' lt ',\n        '>': ' gt ',\n        '<=': ' le ',\n        '>=': ' ge ',\n        '==': ' eq ',\n        '!=': ' ne ',\n        'lessthan': ' lt ',\n        'lessthanorequal': ' le ',\n        'greaterthan': ' gt ',\n        'greaterthanorequal': ' ge ',\n        'equal': ' eq ',\n        'notequal': ' ne '\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odUniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'substringof',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'substringof'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odv4UniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'contains',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'contains'\n    };\n    DataUtil.diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    DataUtil.fnOperators = {\n        /**\n         * Returns true when the actual input is equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         * @param  {boolean} ignoreAccent?\n         */\n        equal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n            }\n            return actual === expected;\n        },\n        /**\n         * Returns true when the actual input is not equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n        },\n        /**\n         * Returns true when the actual input is less than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n            }\n            return actual < expected;\n        },\n        /**\n         * Returns true when the actual input is greater than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n            }\n            return actual > expected;\n        },\n        /**\n         * Returns true when the actual input is less than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n            }\n            return actual <= expected;\n        },\n        /**\n         * Returns true when the actual input is greater than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n            }\n            return actual >= expected;\n        },\n        /**\n         * Returns true when the actual input contains the given string.\n         * @param  {string|number} actual\n         * @param  {string|number} expected\n         * @param  {boolean} ignoreCase?\n         */\n        contains: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) !== -1;\n        },\n        /**\n         * Returns true when the given input value is not null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        notnull: function (actual) {\n            return actual !== null;\n        },\n        /**\n         * Returns true when the given input value is null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnull: function (actual) {\n            return actual === null;\n        },\n        /**\n         * Returns true when the actual input starts with the given string\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.startsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input ends with the given string.\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.endsWith(actual, expected);\n        },\n        /**\n         * It will return the filter operator based on the filter symbol.\n         * @param  {string} operator\n         * @hidden\n         */\n        processSymbols: function (operator) {\n            var fnName = DataUtil.operatorSymbols[operator];\n            if (fnName) {\n                var fn = DataUtil.fnOperators[fnName];\n                return fn;\n            }\n            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n        },\n        /**\n         * It will return the valid filter operator based on the specified operators.\n         * @param  {string} operator\n         * @hidden\n         */\n        processOperator: function (operator) {\n            var fn = DataUtil.fnOperators[operator];\n            if (fn) {\n                return fn;\n            }\n            return DataUtil.fnOperators.processSymbols(operator);\n        }\n    };\n    /**\n     * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n     */\n    DataUtil.parse = {\n        /**\n         * Parse the given string to the plain JavaScript object.\n         * @param  {string|Object|Object[]} jsonText\n         */\n        parseJson: function (jsonText) {\n            if (typeof jsonText === 'string') {\n                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n            }\n            else if (jsonText instanceof Array) {\n                DataUtil.parse.iterateAndReviveArray(jsonText);\n            }\n            else if (typeof jsonText === 'object' && jsonText !== null) {\n                DataUtil.parse.iterateAndReviveJson(jsonText);\n            }\n            return jsonText;\n        },\n        /**\n         * It will perform on array of values.\n         * @param  {string[]|Object[]} array\n         * @hidden\n         */\n        iterateAndReviveArray: function (array) {\n            for (var i = 0; i < array.length; i++) {\n                if (typeof array[i] === 'object' && array[i] !== null) {\n                    DataUtil.parse.iterateAndReviveJson(array[i]);\n                }\n                else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n                }\n                else {\n                    array[i] = DataUtil.parse.parseJson(array[i]);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {JSON} json\n         * @hidden\n         */\n        iterateAndReviveJson: function (json) {\n            var value;\n            var keys = Object.keys(json);\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.startsWith(prop, '__')) {\n                    continue;\n                }\n                value = json[prop];\n                if (typeof value === 'object') {\n                    if (value instanceof Array) {\n                        DataUtil.parse.iterateAndReviveArray(value);\n                    }\n                    else if (value) {\n                        DataUtil.parse.iterateAndReviveJson(value);\n                    }\n                }\n                else {\n                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {string} field\n         * @param  {string|Date} value\n         * @hidden\n         */\n        jsonReviver: function (field, value) {\n            if (typeof value === 'string') {\n                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n                if (ms) {\n                    return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n                }\n                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                    var isUTC = value.indexOf('Z') > -1 || value.indexOf('z') > -1;\n                    var arr = value.split(/[^0-9.]/);\n                    if (isUTC) {\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), DataUtil.serverTimezoneOffset, false);\n                    }\n                    else {\n                        var utcFormat = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10));\n                        var hrs = parseInt(arr[6], 10);\n                        var mins = parseInt(arr[7], 10);\n                        if (isNaN(hrs) && isNaN(mins)) {\n                            return utcFormat;\n                        }\n                        if (value.indexOf('+') > -1) {\n                            utcFormat.setHours(utcFormat.getHours() - hrs, utcFormat.getMinutes() - mins);\n                        }\n                        else {\n                            utcFormat.setHours(utcFormat.getHours() + hrs, utcFormat.getMinutes() + mins);\n                        }\n                        value = DataUtil.dateParse\n                            .toTimeZone(utcFormat, DataUtil.serverTimezoneOffset, false);\n                    }\n                    if (DataUtil.serverTimezoneOffset == null) {\n                        value = DataUtil.dateParse.addSelfOffset(value);\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Check wheather the given value is JSON or not.\n         * @param  {Object[]} jsonData\n         */\n        isJson: function (jsonData) {\n            if (typeof jsonData[0] === 'string') {\n                return jsonData;\n            }\n            return DataUtil.parse.parseJson(jsonData);\n        },\n        /**\n         * Checks wheather the given value is GUID or not.\n         * @param  {string} value\n         */\n        isGuid: function (value) {\n            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n            var match = regex.exec(value);\n            return match != null;\n        },\n        /**\n         * The method used to replace the value based on the type.\n         * @param  {Object} value\n         * @param  {boolean} stringify\n         * @hidden\n         */\n        replacer: function (value, stringify) {\n            if (DataUtil.isPlainObject(value)) {\n                return DataUtil.parse.jsonReplacer(value, stringify);\n            }\n            if (value instanceof Array) {\n                return DataUtil.parse.arrayReplacer(value);\n            }\n            if (value instanceof Date) {\n                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n            }\n            return value;\n        },\n        /**\n         * It will replace the JSON value.\n         * @param  {string} key\n         * @param  {Object} val\n         * @hidden\n         */\n        jsonReplacer: function (val, stringify) {\n            var value;\n            var keys = Object.keys(val);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var prop = keys_3[_i];\n                value = val[prop];\n                if (!(value instanceof Date)) {\n                    continue;\n                }\n                var d = value;\n                if (DataUtil.serverTimezoneOffset == null) {\n                    val[prop] = DataUtil.dateParse.toTimeZone(d, null).toJSON();\n                }\n                else {\n                    d = new Date(+d + DataUtil.serverTimezoneOffset * 3600000);\n                    val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), null).toJSON();\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Array of value.\n         * @param  {string} key\n         * @param  {Object[]} val\n         * @hidden\n         */\n        arrayReplacer: function (val) {\n            for (var i = 0; i < val.length; i++) {\n                if (DataUtil.isPlainObject(val[i])) {\n                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n                }\n                else if (val[i] instanceof Date) {\n                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Date object with respective to UTC format value.\n         * @param  {string} key\n         * @param  {any} value\n         * @hidden\n         */\n        /* tslint:disable-next-line:no-any */\n        jsonDateReplacer: function (key, value) {\n            if (key === 'value' && value) {\n                if (typeof value === 'string') {\n                    var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                    if (ms) {\n                        value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n                    }\n                    else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                        var arr = value.split(/[^0-9]/);\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n                    }\n                }\n                if (value instanceof Date) {\n                    value = DataUtil.dateParse.addSelfOffset(value);\n                    if (DataUtil.serverTimezoneOffset === null) {\n                        return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n                    }\n                    else {\n                        value = DataUtil.dateParse.toTimeZone(value, (((value.getTimezoneOffset() / 60) * 2)\n                            - DataUtil.serverTimezoneOffset), false);\n                        return value.toJSON();\n                    }\n                }\n            }\n            return value;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DataUtil.dateParse = {\n        addSelfOffset: function (input) {\n            return new Date(+input - (input.getTimezoneOffset() * 60000));\n        },\n        toUTC: function (input) {\n            return new Date(+input + (input.getTimezoneOffset() * 60000));\n        },\n        toTimeZone: function (input, offset, utc) {\n            if (offset === null) {\n                return input;\n            }\n            var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n            return new Date(+unix - (offset * 3600000));\n        },\n        toLocalTime: function (input) {\n            var datefn = input;\n            var timeZone = -datefn.getTimezoneOffset();\n            var differenceString = timeZone >= 0 ? '+' : '-';\n            var localtimefn = function (num) {\n                var norm = Math.floor(Math.abs(num));\n                return (norm < 10 ? '0' : '') + norm;\n            };\n            var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) +\n                'T' + localtimefn(datefn.getHours()) +\n                ':' + localtimefn(datefn.getMinutes()) +\n                ':' + localtimefn(datefn.getSeconds()) +\n                differenceString + localtimefn(timeZone / 60) +\n                ':' + localtimefn(timeZone % 60);\n            return val;\n        }\n    };\n    return DataUtil;\n}());\nexport { DataUtil };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     * @param  {DataOptions} ds?\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates',\n            expand: 'expand'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var lazyLoad = {};\n        var keyCount = 0;\n        var group = [];\n        var page;\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n            keyCount++;\n            lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n        }\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            if ((key.fn === 'onPage' || key.fn === 'onGroup') && query.lazyLoad.length) {\n                if (key.fn === 'onGroup') {\n                    group.push(key.e);\n                }\n                if (key.fn === 'onPage') {\n                    page = key.e;\n                }\n                continue;\n            }\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (keyCount) {\n            var args = {\n                query: query, lazyLoad: lazyLoad, result: result, group: group, page: page\n            };\n            var lazyLoadData = this.lazyLoadGroup(args);\n            result = lazyLoadData.result;\n            count = lazyLoadData.count;\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n     * @param  {LazyLoadGroupArgs} args\n     */\n    JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n        var count = 0;\n        var agg = this.getAggregate(args.query);\n        var result = args.result;\n        if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n            var req = args.lazyLoad.onDemandGroupInfo;\n            for (var i = req.where.length - 1; i >= 0; i--) {\n                result = this.onWhere(result, req.where[i]);\n            }\n            if (args.group.length !== req.level) {\n                var field = args.group[req.level].fieldName;\n                result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            }\n            count = result.length;\n            var data = result;\n            result = result.slice(req.skip);\n            result = result.slice(0, req.take);\n            if (args.group.length !== req.level) {\n                this.formGroupResult(result, data);\n            }\n        }\n        else {\n            var field = args.group[0].fieldName;\n            result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            count = result.length;\n            var data = result;\n            result = this.onPage(result, args.page, args.query);\n            this.formGroupResult(result, data);\n        }\n        return { result: result, count: count };\n    };\n    JsonAdaptor.prototype.formGroupResult = function (result, data) {\n        if (result.length && data.length) {\n            var uid = 'GroupGuid';\n            var childLevel = 'childLevels';\n            var level = 'level';\n            var records = 'records';\n            result[uid] = data[uid];\n            result[childLevel] = data[childLevel];\n            result[level] = data[level];\n            result[records] = data[records];\n        }\n        return result;\n    };\n    /**\n     * Separate the aggregate query from the given queries\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.getAggregate = function (query) {\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return agg;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var agg = this.getAggregate(query);\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = DataUtil.getObject(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (DataUtil.getObject(keyField, ds[i]) === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key;\n        if (!isNullOrUndefined(keyField)) {\n            key = getValue(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (!isNullOrUndefined(keyField) && (getValue(keyField, ds[i])) === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    // tslint:disable-next-line:max-func-body-length\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query));\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        if (query.lazyLoad.length) {\n            for (var i = 0; i < query.lazyLoad.length; i++) {\n                req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n            }\n        }\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        var isExpand = false;\n        if (Array.isArray(data.result) && data.result.length) {\n            var key = 'key';\n            var val = 'value';\n            var level = 'level';\n            if (!isNullOrUndefined(data.result[0][key])) {\n                args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n            }\n            if (query.lazyLoad.length && pvt.groups.length) {\n                for (var i = 0; i < query.lazyLoad.length; i++) {\n                    if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n                        var value = query.lazyLoad[i][val][level];\n                        if (pvt.groups.length === value) {\n                            isExpand = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (!isExpand) {\n            this.getAggregateResult(pvt, data, args, groupDs, query);\n        }\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n                this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n            }\n        }\n        var uid = 'GroupGuid';\n        var childLvl = 'childLevels';\n        var lvl = 'level';\n        var records = 'records';\n        data[uid] = consts[uid];\n        data[lvl] = level;\n        data[childLvl] = childLevel;\n        data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n        return data;\n    };\n    UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n        var childGroupedRecords = [];\n        var records = 'records';\n        for (var i = 0; i < data.length; i++) {\n            if (!hasRecords) {\n                for (var j = 0; j < data[i].items.length; j++) {\n                    childGroupedRecords.push(data[i].items[j]);\n                }\n            }\n            else {\n                childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n            }\n        }\n        return childGroupedRecords;\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: DataUtil.getObject(keyField, value),\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        var key = 'key';\n        var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n        if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch :\n            dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        if (query instanceof Query) {\n            var queries = this.getQueryRequest(query);\n            for (var i = 0; i < queries.filters.length; i++) {\n                if (queries.filters[i].e.key === predicate.value) {\n                    requiresCast = true;\n                }\n            }\n        }\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        if (DataUtil.parse.isGuid(val)) {\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            selected[splits[0]].push(splits[1]);\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + _this.options.select + \"=\" + selected[expand].join(',') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    /**\n     * Returns the groupby query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaName]) {\n            var dataUrl = data[metaName].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var _this = this;\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var req = [];\n        var _loop_1 = function (i, x) {\n            changes.addedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': 'POST ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //insertion\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n            _loop_1(i, x);\n        }\n        var _loop_2 = function (i, x) {\n            changes.changedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': _this.options.updateType + ' ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //updation \n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n            _loop_2(i, x);\n        }\n        var _loop_3 = function (i, x) {\n            changes.deletedRecords.forEach(function (j, d) {\n                var state = {\n                    'mtd': 'DELETE ',\n                    'url': function (data, i, key) {\n                        var url = DataUtil.getObject(key, data[i]);\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                            return '/' + url;\n                        }\n                        else if (url instanceof Date) {\n                            var datTime = data[i][key];\n                            return '/' + datTime.toJSON();\n                        }\n                        else {\n                            return \"/'\" + url + \"'\";\n                        }\n                    },\n                    'data': function (data, i) { return ''; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //deletion\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n            _loop_3(i, x);\n        }\n        req.push('--' + initialGuid + '--', '');\n        return {\n            type: 'POST',\n            url: url,\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\n            data: req.join('\\r\\n')\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\n            && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n","import { Ajax } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     * @param  {DataOptions|JSON[]} dataSource?\n     * @param  {Query} query?\n     * @param  {AdaptorOptions|string} adaptor?\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        /** @hidden */\n        this.timeZoneHandling = true;\n        this.requests = [];\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        if (dataSource && dataSource.timeZoneHandling === false) {\n            this.timeZoneHandling = dataSource.timeZoneHandling;\n        }\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor ? false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    /**\n     * Overrides DataManager's default query with given query.\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        var makeRequest = 'makeRequest';\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')\n            || (!isNullOrUndefined(this.adaptor[makeRequest]))) {\n            var result = this.adaptor.processQuery(this, query);\n            if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n                this.adaptor[makeRequest](result, deffered, args, query);\n            }\n            else if (!isNullOrUndefined(result.url)) {\n                this.makeRequest(result, deffered, args, query);\n            }\n            else {\n                args = DataManager.getDeferedArgs(query, result, args);\n                deffered.resolve(args);\n            }\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        (window.setImmediate || window.setTimeout)(fn, 0);\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        var ajax = new Ajax(req);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        req = ajax.send();\n        req.catch(function (e) { return true; }); // to handle failure remote requests.        \n        this.requests.push(ajax);\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].httpRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.setRequestHeader(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     * @param  {Object} changes - Defines the CrudOptions.\n     * @param  {string} key - Defines the column field.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            var deff_1 = new Deferred();\n            var ajax_1 = new Ajax(req);\n            ajax_1.beforeSend = function () {\n                _this.beforeSend(ajax_1.httpRequest, ajax_1);\n            };\n            ajax_1.onSuccess = function (data, request) {\n                deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n            };\n            ajax_1.onFailure = function (e) {\n                deff_1.reject([{ error: e }]);\n            };\n            ajax_1.send().catch(function (e) { return true; }); // to handle the failure requests.        \n            return deff_1.promise;\n        }\n    };\n    /**\n     * Inserts new record in the given table.\n     * @param  {Object} data - Defines the data to insert.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            return this.doAjaxRequest(req);\n        }\n    };\n    /**\n     * Removes data from the table with the given key.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = DataUtil.getObject(keyField, value);\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            return this.doAjaxRequest(res);\n        }\n    };\n    /**\n     * Updates existing record in the given table.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            return this.doAjaxRequest(res);\n        }\n    };\n    DataManager.prototype.doAjaxRequest = function (res) {\n        var _this = this;\n        var defer = new Deferred();\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        var ajax = new Ajax(res);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        ajax.onSuccess = function (record, request) {\n            try {\n                DataUtil.parse.parseJson(record);\n            }\n            catch (e) {\n                record = [];\n            }\n            record = _this.adaptor.processResponse(DataUtil.parse.parseJson(record), _this, null, request.httpRequest, request);\n            defer.resolve(record);\n        };\n        ajax.onFailure = function (e) {\n            defer.reject([{ error: e }]);\n        };\n        ajax.send().catch(function (e) { return true; }); // to handle the failure requests.\n        return defer.promise;\n    };\n    return DataManager;\n}());\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\nexport { Deferred };\n"],"names":["Query","from","this","subQuery","isChild","distincts","queries","key","fKey","fromTable","Array","lookups","expands","sortedColumns","groupedColumns","params","lazyLoad","prototype","setKey","field","using","dataManager","execute","done","fail","always","executeQuery","DataUtil","throwError","executeLocal","clone","cloned","slice","subQuerySelector","isCountRequired","tableName","addParams","value","push","fn","distinct","fields","call","expand","tables","where","fieldName","operator","ignoreCase","ignoreAccent","toLowerCase","predicate","Predicate","e","search","searchKey","fieldNames","comparer","fnOperators","sortBy","isFromGroup","sorts","temp","order","endsWith","replace","fnSort","filterQueries","i","length","j","direction","sortByDesc","group","format","page","pageIndex","pageSize","range","start","end","take","nos","skip","select","hierarchy","query","selectorFn","foreignKey","requiresCount","aggregate","type","name","filter","q","filterQueryLists","singles","filtered","indexOf","res","isComplex","processOperator","condition","predicates","apply","and","args","_i","arguments","combinePredicates","combine","or","fromJson","json","len","fromJSONData","pred","validate","record","isAnd","ret","getObject","toJson","p","preds","consts","GroupGuid","getValue","inst","input","substr","startsWith","fnAscending","fnDescending","x","y","isNullOrUndefined","undefined","localeCompare","extractFields","obj","newObj","setValue","jsonArray","newData","aggregates","level","groupDs","isLazyLoad","jsonData","_loop_1","items","this_1","count","indx","childLevels","grouped","groupedArray","records","_loop_2","val","this_2","getVal","tempObj","_loop_3","aggs","buildHierarchy","source","lookup","pKey","grp","result","fKeyData","getFieldList","prefix","copyObj","keys_1","Object","keys","prop","nameSpace","splits","split","toString","fromObj","sort","ds","middle","parseInt","left","right","merge","ignoreDiacritics","map","diacritics","join","current","shift","array","index","callAdaptorFunction","adaptor","fnName","param1","param2","getAddParams","adp","dm","req","reqParams","isPlainObject","constructor","isCors","xhr","window","getGuid","rand","crypto","arr","Uint8Array","getRandomValues","Math","random","isNull","getItemFromComparer","keyVal","castRequired","requiresCompleteRecord","tmp","forEach","data","serverTimezoneOffset","timeZoneHandling","error","Error","message","stack","sum","isNaN","average","min","max","truecount","DataManager","falsecount","operatorSymbols","<",">","<=",">=","==","!=","*=","$=","^=","odBiOperator","lessthan","lessthanorequal","greaterthan","greaterthanorequal","equal","notequal","odUniOperator","endswith","startswith","contains","odv4UniOperator","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","actual","expected","notnull","isnull","processSymbols","parse","parseJson","jsonText","JSON","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","test","keys_2","ms","exec","offSet","dateParse","toTimeZone","Date","isUTC","utcFormat","hrs","mins","setHours","getHours","getMinutes","addSelfOffset","isJson","isGuid","replacer","stringify","jsonReplacer","arrayReplacer","keys_3","d","toJSON","date","jsonDateReplacer","getTimezoneOffset","toUTC","offset","utc","unix","toLocalTime","datefn","timeZone","differenceString","localtimefn","num","norm","floor","abs","getFullYear","getMonth","getDate","getSeconds","__extends","extendStatics","b","setPrototypeOf","__proto__","hasOwnProperty","__","create","Adaptor","options","requestType","dataSource","pvt","processResponse","JsonAdaptor","_super","processQuery","countFlg","keyCount","agg","lazyLoadData","lazyLoadGroup","getAggregate","onDemandGroupInfo","onPage","formGroupResult","onWhere","aggQuery","batchRequest","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","onAggregates","onSearch","onSortBy","fnCompare","onGroup","size","onRange","onTake","onSkip","onSelect","position","splice","keyField","UrlAdaptor","hierarchyFilters","getQueryRequest","url","request","groups","filters","searches","getFiltersFrom","getRequestQuery","_a","pvtData","contentType","convertToQueryString","request1","selects","getResponseHeader","handleTimeZone","requests","action","isExpand","isArray","formRemoteGroupedData","getAggregateResult","childLevel","getGroupedRecords","hasRecords","childGroupedRecords","concat","original","batchUrl","crudUrl","removeUrl","dataType","extend","changed","added","deleted","table","beforeSend","insertUrl","keyColumn","updateUrl","predicats","pData","aggregateData","isServerGrouping","groupQuery","ODataAdaptor","props","_this","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","getModuleName","onPredicate","requiresCast","guid","returnValue","getField","encodeURIComponent","onComplexPredicate","onEachWhere","onEachSearch","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","metaCheck","rootUrl","dataUrls","resourceTableName","dataCopy","results","emptyAndBatch","processBatchResponse","versionCheck","version","oDataCount","requiresFormat","keys_4","localTimeReplacer","convertObj","localTime","compareAndRemove","initialGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","stat","method","generateBodyContent","org","change","o","cIdx","jsonObj","substring","exVal","changeGuid","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","ex","onDistinct","distinctFields","dataUrl","WebApiAdaptor","location","host","state","Count","Items","WebMethodAdaptor","param","RemoteSaveAdaptor","updateKey","CacheAdaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","cachedItems","crossDomain","offline","headers","timeTillExpiration","cachingPageSize","enableCaching","jsonp","defaultQuery","isDataAvailable","ready","then","setDefaultQuery","makeRequest","deffered","Deferred","getDeferedArgs","resolve","nextTick","promise","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","cache","processData","onSuccess","onFailure","isSelector","reject","process","virtualSelectRecords","fnQueryChild","selector","subDeffer","childArgs","parent","subUrl","childReq","subData","httpRequest","virtualRecords","ajax","Ajax","send","catch","Promise","all","pResult","cResult","saveChanges","deff_1","ajax_1","doAjaxRequest","defer","bind"],"mappings":"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"}